services:
#  my-db:
#    container_name: postgres
#    image: postgres:14
#
#    environment:
#      - POSTGRES_DB=django-postgres
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=qwe123
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres -d django-postgres"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#    networks:
#      - account_network

  my-redis:
    image: redis:7
    container_name: my-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - account_network

  my-django:
    build: .
    container_name: my-django
    working_dir: /app
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    expose:
      - "8000"
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.prod
      - REDIS_HOST=my-redis
    depends_on:
#      my-db:
#        condition: service_healthy
      my-redis:
        condition: service_healthy
    networks:
      - account_network
    command: >
      sh -c "python manage.py collectstatic --noinput \
             && python manage.py migrate \
             && gunicorn config.wsgi:application -b 0.0.0.0:8000"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"               # http 포트 오픈
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro   # 직접 만든 nginx 설정파일
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - static_volume:/app/staticfiles
      # django static 파일 연결
    depends_on:
      - my-django
    networks:
      - account_network

volumes:
  postgres_data:
  static_volume:

networks:
  account_network:


