# .github/workflows/checks.yml

name: Code Quality Checks

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest
    # 환경변수를 워크플로우 레벨에서 설정합니다
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DJANGO_ENV: development
      DB_NAME: ${{ secrets.PG_NAME }}
      DB_USER: ${{ secrets.PG_USER }}
      DB_PASSWORD: ${{ secrets.PG_PASSWORD }}
      DB_HOST: localhost
      DB_PORT: 5432
      REDIS_HOST: localhost
      REDIS_PORT: 6379

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black isort

      - name: Run isort (import sorting)
        run: isort . --check --diff

      - name: Run black (code formatting)
        run: black . --check

      - name: Wait for database
        run: python manage.py wait_for_db

      - name: Apply migrations
        run: |
          python manage.py makemigrations --noinput
          python manage.py migrate --noinput

      - name: Run tests
        run: python manage.py test


